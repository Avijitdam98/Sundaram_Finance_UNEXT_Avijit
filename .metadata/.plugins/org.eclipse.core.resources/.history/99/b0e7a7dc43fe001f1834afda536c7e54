// Custom Checked Exception for Insufficient Funds
class InsufficientFundsException extends Exception {
    public InsufficientFundsException(String message) {
        super(message);
    }
}

// Custom Unchecked Exception for Invalid Withdrawal Amount
class InvalidAmountException extends RuntimeException {
    public InvalidAmountException(String message) {
        super(message);
    }
}

// BankAccount Class
class BankAccount {
    private double balance;

    // Constructor to initialize balance
    public BankAccount(double balance) {
        this.balance = balance;
    }

    // Method to return the current balance
    public double getBalance() {
        return balance;
    }

    // Method to withdraw money
    public void withdraw(double amount) throws InsufficientFundsException {
        if (amount <= 0) {
            throw new InvalidAmountException("Withdrawal amount cannot be negative or zero.");
        }
        if (amount > balance) {
            throw new InsufficientFundsException("Insufficient funds. Available balance: " + balance);
        }
        balance -= amount;
        System.out.println("Withdrawal successful. Remaining balance: " + balance);
    }
}

// Main Class
public class BankDetails{
    public static void main(String[] args) {
        BankAccount account = new BankAccount(500); // Initial balance is 500

        // Scenario 1: Withdraw negative amount (throws InvalidAmountException)
        try {
            account.withdraw(-100);
        } catch (InvalidAmountException e) {
            System.out.println("Exception: " + e.getMessage());
        } catch (InsufficientFundsException e) {
            // This won't run for negative amounts
        }

        // Scenario 2: Withdraw more than balance (throws InsufficientFundsException)
        try {
            account.withdraw(600);
        } catch (InvalidAmountException e) {
            // This won't run for insufficient funds
        } catch (InsufficientFundsException e) {
            System.out.println("Exception: " + e.getMessage());
        }

        // Scenario 3: Successful withdrawal
        try {
            account.withdraw(300);
        } catch (InvalidAmountException | InsufficientFundsException e) {
            System.out.println("Exception: " + e.getMessage());
        }
    }
}
